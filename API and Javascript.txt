+REST-API ======> steht für „Representational State Transfer - 
Application Programming Interface“. 
Sie macht den Austausch von Informationen möglich,
 wenn diese sich auf unterschiedlichen Systemen befinden.
+ API IN JAVASCRIPT 
fetch('http://example.com/movies.json')
  .then(response => response.json())
  .then(data => console.log(data));
WIR HABEN EINE -Response- und sollen es in Json ubersetzen mit der Methode .json
///////////============//////////////////////////////////////////===============================////////////

+HTTP REQUEST =====> 
-GET :Mit der GET-Methode können Sie eine Ressource (zum Beispiel eine Datei) vom Server anfordern.
fetch('https://jsonplaceholder.typicode.com/posts')
  .then((response) => response.json())
  .then((json) => console.log(json));

-POST:Mit der POST-Methode können Sie große Datenmengen (wie Bilder oder HTML-Formular-Daten) 
      zur weiteren Verarbeitung zum Server senden
fetch('https://jsonplaceholder.typicode.com/posts', {
  method: 'POST',
  body: JSON.stringify({
    title: 'foo',
    body: 'bar',
    userId: 1,
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
  .then((response) => response.json())
  .then((json) => console.log(json));

-DELETE:Die DELETE-Methode löscht die angegebene Ressource auf dem Server
fetch('https://jsonplaceholder.typicode.com/posts/1', {
  method: 'DELETE',
});

-PUT:Die PUT-Methode dient dazu eine Ressource (zum Beispiel eine Datei) 
unter Angabe des Ziel-URIs auf einen Webserver hochzuladen.

fetch('https://jsonplaceholder.typicode.com/posts/1', {
  method: 'PUT',
  body: JSON.stringify({
    id: 1,
    title: 'foo',
    body: 'bar',
    userId: 1,
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
  .then((response) => response.json())
  .then((json) => console.log(json))

-PATCH:La méthode PATCH est utilisée pour appliquer des modifications partielles à une ressource
fetch('https://jsonplaceholder.typicode.com/posts/1', {
  method: 'PATCH',
  body: JSON.stringify({
    title: 'foo',
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
  .then((response) => response.json())
  .then((json) => console.log(json));

